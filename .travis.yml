language: go
dist: xenial
sudo: required
go:
- 1.11.x
go_import_path: github.com/amadeusitgroup/kubervisor
os: linux
services:
- docker
env:
  global:
  - TAG=${TRAVIS_TAG:=${TRAVIS_COMMIT}}
  - GH_URL=https://amadeusitgroup.github.io/kubervisor
  - IMAGE_NAME=traviscontroller
  - CONTAINER_REGISTRY_HOST="172.17.0.1:5000"
  - TOOLS_PATH="/tmp/tools"
  - GO111MODULE=on
install:
# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.4/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# clear cluster with kind.
- ./hack/install_kube.sh
- export KUBECONFIG="$(kind get kubeconfig-path)"
# Add missing permission for dashboard when RBAC is activated
- kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default
- kubectl get nodes
- kubectl get pods --all-namespaces
- docker info
- curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
- kubectl -n kube-system create sa tiller
- kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
- helm init --service-account tiller
- GO111MODULE=off go get -u github.com/alecthomas/gometalinter && GO111MODULE=off gometalinter --install
stages:
- name: build
- name: release
  if: tag IS present
jobs:
  include:
  - stage: build
    name: build
    script:
    - make build
    - make test
    - make lint
    - make TAG=latest REGISTRY=${CONTAINER_REGISTRY_HOST}/ push
    - cd test/e2e && make TAG=latest REGISTRY=${CONTAINER_REGISTRY_HOST}/ push; cd -
    - cd test/e2e && make TAG=latest container && cd -
    - helm install --wait --version latest --set image.registry=${CONTAINER_REGISTRY_HOST}/ --set image.tag=latest -n end2end-test charts/kubervisor
    - cd ./test/e2e && go test -mod=vendor -c && ./e2e.test --kubeconfig=$(kind get kubeconfig-path) --registry=${CONTAINER_REGISTRY_HOST}/ --ginkgo.slowSpecThreshold 200
    - helm delete end2end-test
  - stage: release
    script:
      - docker login -u "$DOCKER_USERNAME" p "$DOCKER_PASSWORD"
      - curl -sL https://git.io/goreleaser | bash
    deploy:
    - provider: releases
      api_key:
        secure: $GITHUB_TOKEN
      skip_cleanup: true
      file:
      - docs/helm-kubervisor-$TAG.tgz
      on:
        tags: true
        branches:
          only:
          - master
          - /^v\d+(\.\d+)+$/
after_success:
- bash <(curl -s https://codecov.io/bash) -f $TRAVIS_BUILD_DIR/coverage.txt
